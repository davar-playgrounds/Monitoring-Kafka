---
version: '2'
services:

  zookeeper:
      restart: always
      image: "zookeeper:3.5"
      hostname: zookeeper
      container_name: zookeeper
      ports:
        - "2181:2181"
      volumes:
        - ./zoo1/data:/data
        - ./zoo1/datalog:/datalog
        - ./zoo1/logs:/logs
      network_mode: "host"
      
  kafka-1:
      build:
        context: .
      image: kafka-with-jmx:5.4.0
      container_name: kafka-1
      depends_on:
        - zookeeper
      ports:
        - "9092:9092"
        - "19092:19092"
        ## JMX ##
        - "7071:7071"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ADVERTISED_HOST_NAME: kafka-1
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:19092,LISTENER_DOCKER_EXTERNAL://kafka-1:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181/kafka-cluster
        ## JMX ##
        KAFKA_OPTS: -javaagent:/usr/jmx_prometheus_javaagent-0.10.jar=7071:/usr/prom-jmx-agent-config.yml
        ## logging ##
        KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
        KAFKA_TOOLS_LOG4J_LOGLEVEL: INFO
      volumes:
        - ./kafka1/kafka-data:/var/lib/kafka/data
      network_mode: "host"
      restart: always

  kafka-2:
      image: kafka-with-jmx:5.4.0
      container_name: kafka-2
      depends_on:
        - zookeeper
      ports:
        - "9093:9093"
        - "19093:19093"
        ## JMX ##
        - "7071:7072"
      environment:
        KAFKA_BROKER_ID: 2
        KAFKA_ADVERTISED_HOST_NAME: kafka-2
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:19093,LISTENER_DOCKER_EXTERNAL://kafka-2:9093
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181/kafka-cluster
        ## JMX ##
        KAFKA_OPTS: -javaagent:/usr/jmx_prometheus_javaagent-0.10.jar=7071:/usr/prom-jmx-agent-config.yml
        ## logging ##
        KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
        KAFKA_TOOLS_LOG4J_LOGLEVEL: INFO
      volumes:
        - ./kafka2/kafka-data:/var/lib/kafka/data
      network_mode: "host"
      restart: always

  kafka-3:
      image: kafka-with-jmx:5.4.0
      container_name: kafka-3
      depends_on:
        - zookeeper
      ports:
        - "9094:9094"
        - "19094:19094"
        ## JMX ##
        - "7071:7073"
      environment:
        KAFKA_BROKER_ID: 3
        KAFKA_ADVERTISED_HOST_NAME: kafka-3
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-3:19094,LISTENER_DOCKER_EXTERNAL://kafka-3:9094
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181/kafka-cluster
        ## JMX ##
        KAFKA_OPTS: -javaagent:/usr/jmx_prometheus_javaagent-0.10.jar=7071:/usr/prom-jmx-agent-config.yml
        ## logging ##
        KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
        KAFKA_TOOLS_LOG4J_LOGLEVEL: INFO
      volumes:
        - ./kafka3/kafka-data:/var/lib/kafka/data
      network_mode: "host"
      restart: always

  kafka-exporter:
      restart: always
      image: "danielqsj/kafka-exporter"
      hostname: kafka-exporter
      container_name: kafka-exporter
      ports:
        - "9308:9308"
      command: "--kafka.server=kafka-1:9092 --kafka.server=kafka-2:9093 --kafka.server=kafka-3:9094"
      network_mode: "host"

  prometheus:
      restart: always
      image: "prom/prometheus"
      hostname: prometheus
      container_name: prometheus
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      command: "--config.file=/etc/prometheus/prometheus.yml"
      network_mode: "host"

  grafana:
      restart: always
      image: "grafana/grafana:6.4.4"
      hostname: grafana
      container_name: grafana
      ports:
        - "3000:3000"
      environment:
        GF_PATHS_DATA: /var/lib/grafana
        # SMTP for alert notification
        GF_SMTP_ENABLED: "true"
        GF_SMTP_HOST: "smtp.office365.com:587"
        GF_SMTP_USER: "test@test.com"
        GF_SMTP_PASSWORD: "test"
        GF_SMTP_FROM_ADDRESS: "test@test.com"
        GF_SMTP_FROM_NAME: "Alert"
        GF_SMTP_SKIP_VERIFY: "true"
        # Rendering Engine
        GF_RENDERING_SERVER_URL: http://127.0.0.1:8081/render
        GF_RENDERING_CALLBACK_URL: http://127.0.0.1:3000/
        GF_LOG_FILTERS: rendering:debug
      volumes:
        - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
        - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
        - ./grafana/dashboards:/var/lib/grafana/dashboards
      network_mode: "host"
      depends_on:
        - prometheus

  grafana-renderer:
      image: grafana/grafana-image-renderer:latest
      container_name: grafana-renderer
      ports:
        - "8081:8081"
      network_mode: "host"

